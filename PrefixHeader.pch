// 常用宏

#ifndef _________PrefixHeader_pch
#define _________PrefixHeader_pch

/** 日志输出 */
#ifdef DEBUG // 开发
#define XZLog(...) NSLog(__VA_ARGS__)
#else // 发布
#define XZLog(...)
#endif

#define XZLogFunc XZLog(@"%s", __func__)

/** self的弱引用 */
#define XZWeakSelf __weak typeof(self) weakSelf = self;

/** 屏幕尺寸 */
#define XZScreenW [UIScreen mainScreen].bounds.size.width
#define XZScreenH [UIScreen mainScreen].bounds.size.height

/** 颜色 */
#define XZColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
/// rgb颜色转换（16进制->10进制）
#define XZColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]

/// 带有RGBA的颜色设置
#define COLOR(R, G, B, A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]

/// 获取RGB颜色
#define RGBA(r,g,b,a) [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]
/// 全局颜色
#define XZGlobalBg XZColor(215, 215, 215)
/// 随机颜色
#define XZRandomColor XZColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))
//清除背景色
#define XZClearColor [UIColor clearColor]
/** 获取系统信息 */

/// 获取系统版本
#define IOS_VERSION [[[UIDevice currentDevice] systemVersion] floatValue]
#define currentSystemVersion [[UIDevice currentDevice] systemVersion]

/// 判断是否iPad
#define isPad (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)

/// 获取当前语言
#define currentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

//判断是真机还是模拟器
#if TARGET_OS_IPHONE
//iPhone Device
#endif

#if TARGET_IPHONE_SIMULATOR
//iPhone Simulator
#endif

/** 获得导航栏Y值 */
#define XZNavigationBarMaxY 64

/** 字体 */
#define XZ14TextFont [UIFont systemFontOfSize:14]

/** Other */
/// G－C－D
#define BACK(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)
#define MAIN(block) dispatch_async(dispatch_get_main_queue(),block)

/// NSUserDefaults 实例化
#define USER_DEFAULT [NSUserDefaults standardUserDefaults]
/** 常见头文件 */


/// 单例化一个类
#define SYNTHESIZE_SINGLETON_FOR_CLASS(classname) \
\
static classname *shared##classname = nil; \
\
+ (classname *)shared##classname \
{ \
@synchronized(self) \
{ \
if (shared##classname == nil) \
{ \
shared##classname = [[self alloc] init]; \
} \
} \
\
return shared##classname; \
} \
\
+ (id)allocWithZone:(NSZone *)zone \
{ \
@synchronized(self) \
{ \
if (shared##classname == nil) \
{ \
shared##classname = [super allocWithZone:zone]; \
return shared##classname; \
} \
} \
\
return nil; \
} \
\
- (id)copyWithZone:(NSZone *)zone \
{ \
return self; \
}



#endif
